#! /bin/sh

### BEGIN INIT INFO
# Provides:          gpio_server to allow sudo access to io hardware of cubietruck
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the gpio server
# Description:       starts the gpio server
### END INIT INFO
## Create RVM wrapper via: rvm wrapper 2.1.1 bootup //home/cds/CDServer/services/gpio_server.rb

DESC="gpioserver for CT io controll"
NAME=gpio_server

PATH=/sbin:/usr/sbin:/bin:/usr/bin

DAEMON=//home/cds/.rvm/bin/bootup_gpio_server.rb

DAEMON_HOME=//home/cds/CDServer
DAEMON_LOG=$DAEMON_HOME/log/gpio_server.log
DAEMON_OPTS="-e production -p 8970"
PID=/run/cpioserver.pid
VERBOSE=y


. /lib/init/vars.sh
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
# Return
# 0 if daemon has been started
# 1 if daemon was already running
# 2 if daemon could not be started
do_start()
{
    start-stop-daemon --start --quiet --pidfile $PID --exec $DAEMON --test > /dev/null || return 1
    start-stop-daemon --start --quiet --pidfile $PID --exec $DAEMON -- $DAEMON_OPTS 2>/dev/null || return 2
}
#
# Function that stops the daemon/service
#
# Return
# 0 if daemon has been stopped
# 1 if daemon was already stopped
# 2 if daemon could not be stopped
# other if a failure occurred
do_stop()
{
    start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PID --name $NAME
    RETVAL="$?"
    sleep 1
    return "$RETVAL"
}
case "$1" in
start)
    [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
    do_start
    case "$?" in
    0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
    2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
esac
;;
stop)
    [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
    do_stop
    case "$?" in
    0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
    2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
esac
;;
restart)
    log_daemon_msg "Restarting $DESC" "$NAME"
    $0 stop &&
    $0 start ||
exit $?
;;
status)
    status_of_proc -p $PID "$DAEMON" "$NAME" || exit $?
    ;;
    *)
    echo "Usage: $NAME {start|stop|restart|status}" >&2
    exit 3
;;
esac